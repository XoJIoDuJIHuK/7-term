services:
  api:
    build:
      context: ../..
      dockerfile: contrib/docker/fastapi/Dockerfile
    env_file:
      - ../../.local.env
    volumes:
      - ../../src:/app/src
      - ../../tests:/app/tests
      - ./fastapi/docker-entrypoint.d:/app/docker-entrypoint.d
    depends_on:
      - postgres
    networks:
      - a

  postgres:
    build:
      context: ../../
      dockerfile: contrib/docker/postgres/Dockerfile
    restart: always
    env_file:
      - ../../.local.env
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql.conf
    networks:
      - a


  translation_consumer:
    image: diploma-base
    command:
      - "python"
      - "-m"
      - "src.manage"
      - "start_translator_consumer"
    env_file:
      - ../../.local.env
    volumes:
      - ../../src:/app/src
      - ./consumer/docker-entrypoint.d:/app/docker-entrypoint.d
    depends_on:
      - rabbitmq
    networks:
      - a

  rabbitmq:
    image: rabbitmq:4.1-rc-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_LOGIN}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
      # - RABBITMQ_ERLANG_COOKIE=YOURCOOKIEHERE
    ports:
      - "5672:5672"   # AMQP protocol port (default RabbitMQ port).
      - "15672:15672" # Management UI HTTP port.
      - "25672:25672" # RabbitMQ clustering distribution port (optional).
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia  # Persistent storage for RabbitMQ data.
      - rabbitmq_logs:/var/log/rabbitmq/       # Persistent storage for RabbitMQ logs
    networks:
      - a


  # mail_consumer:
  #   image: diploma-base
  #   command:
  #     - "python"
  #     - "-m"
  #     - "src.manage"
  #     - "start_mail_consumer"
  #   env_file:
  #     - ../../.env
  #   volumes:
  #     - ../../src:/app/src
  #     - ./consumer/docker-entrypoint.d:/app/docker-entrypoint.d
  #   depends_on:
  #     - rabbitmq
  #   networks:
  #     - a

  redis:
    image: redis:7.4.1
    ports:
      - "6379:6379"
    restart: always
    networks:
      - a

  nginx:
    build:
      context: ../..
      dockerfile: contrib/docker/nginx/Dockerfile
    ports:
      - "8000:8000"
      - "9000:9000"
    depends_on:
      - api
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - a

  vue-dev:
    image: vue-dev-base
    build:
      context: ../..
      dockerfile: contrib/docker/vue-dev/Dockerfile
    command:
      # - "tail"
      # - "-f"
      # - "/dev/null"
      - "npm"
      - "run"
      - "dev"
      - "--"
      - "--host"
      - "0.0.0.0"
    volumes:
      - ../front/src/:/app/src/
    networks:
      - a


volumes:
  pg_data:
    driver: local
  rabbitmq_data:
  rabbitmq_logs:

networks:
  a:
    external: true
