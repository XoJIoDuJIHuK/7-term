services:
  api:
    build:
      context: ../..
      dockerfile: contrib/docker/fastapi/Dockerfile
    env_file:
      - ../../.env
    ports:
      - "8000:8000"
    volumes:
      - ../../:/app
    depends_on:
      - postgres

  postgres:
    build:
      context: ../../
      dockerfile: contrib/docker/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql.conf

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_ADDRESS}
      KAFKA_LISTENERS: PLAINTEXT://${KAFKA_ADDRESS}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: ${KAFKA_ADDRESS}
      JVM_OPTS: '-Xmx256M'
    depends_on:
      - kafka

  translation_consumer:
    image: diploma-base
    command:
      - "python"
      - "-m"
      - "src.manage"
      - "start_translator_consumer"
    env_file:
      - ../../.env
    volumes:
      - ./consumer/docker-entrypoint.d:/app/docker-entrypoint.d
    depends_on:
      - kafka

  mail_consumer:
    image: diploma-base
    command:
      - "python"
      - "-m"
      - "src.manage"
      - "start_mail_consumer"
    env_file:
      - ../../.env
    volumes:
      - ./consumer/docker-entrypoint.d:/app/docker-entrypoint.d
    depends_on:
      - kafka

  redis:
    image: redis:7.4.1
    ports:
      - "6379:6379"
    restart: always


volumes:
  pg_data:
    driver: local